"""add telegram auth relationship

Revision ID: 6cd00a86ad6f
Revises: 
Create Date: 2025-04-29 14:30:44.914081

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6cd00a86ad6f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('http_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('is_request', sa.Boolean(), nullable=False),
    sa.Column('method', sa.String(), nullable=True),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('client_ip', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('request_headers', sa.JSON(), nullable=True),
    sa.Column('query_params', sa.JSON(), nullable=True),
    sa.Column('request_body', sa.JSON(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('response_headers', sa.JSON(), nullable=True),
    sa.Column('response_body', sa.JSON(), nullable=True),
    sa.Column('processing_time_ms', sa.Float(), nullable=True),
    sa.Column('related_log_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата та час створення запису'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата та час останнього оновлення запису'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Чи є запис активним'),
    sa.ForeignKeyConstraint(['related_log_id'], ['http_logs.id'], name=op.f('fk_http_logs_related_log_id_http_logs')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_http_logs'))
    )
    op.create_table('otps',
    sa.Column('code', sa.String(length=6), nullable=False, comment='Код OTP (6 цифр)'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='Email користувача'),
    sa.Column('is_used', sa.Boolean(), nullable=True, comment='Чи був використаний OTP'),
    sa.Column('expires_at', sa.DateTime(), nullable=False, comment='Час закінчення терміну дії'),
    sa.Column('processed_at', sa.DateTime(), nullable=True, comment='Час обробки OTP'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='Унікальний ідентифікатор запису'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата та час створення запису'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата та час останнього оновлення запису'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Чи є запис активним'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_otps'))
    )
    with op.batch_alter_table('otps', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_otps_email'), ['email'], unique=False)

    op.create_table('reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('date_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('from_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('to_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cash_register_id', sa.String(), nullable=True),
    sa.Column('emails', sa.Text(), nullable=True),
    sa.Column('processing_status', sa.String(), nullable=True),
    sa.Column('report_data', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('report_type', sa.String(), nullable=True),
    sa.Column('filename', sa.String(), nullable=True),
    sa.Column('file_hash', sa.String(), nullable=True),
    sa.Column('rows_count', sa.Integer(), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата та час створення запису'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата та час останнього оновлення запису'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Чи є запис активним'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reports'))
    )
    op.create_table('roles',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False, comment='Унікальний ідентифікатор запису'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата та час створення запису'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата та час останнього оновлення запису'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Чи є запис активним'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles'))
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_name'), ['name'], unique=True)

    op.create_table('application_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('log_type', sa.String(), nullable=False),
    sa.Column('detail_type', sa.String(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('module', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('entity_type', sa.String(), nullable=True),
    sa.Column('entity_id', sa.String(), nullable=True),
    sa.Column('exception_type', sa.String(), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('http_log_id', sa.String(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата та час створення запису'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата та час останнього оновлення запису'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Чи є запис активним'),
    sa.ForeignKeyConstraint(['http_log_id'], ['http_logs.id'], name=op.f('fk_application_logs_http_log_id_http_logs')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_application_logs'))
    )
    op.create_table('product_sales',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('report_id', sa.UUID(), nullable=True),
    sa.Column('product_code', sa.String(), nullable=True),
    sa.Column('product_name', sa.String(), nullable=True),
    sa.Column('ukt_zed_code', sa.String(), nullable=True),
    sa.Column('barcode', sa.String(), nullable=True),
    sa.Column('receipt_numbers', sa.String(), nullable=True),
    sa.Column('operation_type', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('receipts_count', sa.Integer(), nullable=True),
    sa.Column('tax_name', sa.String(), nullable=True),
    sa.Column('tax_rate', sa.String(), nullable=True),
    sa.Column('additional_fee', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('markup_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('sale_date', sa.Date(), nullable=True),
    sa.Column('sale_datetime', sa.DateTime(), nullable=True),
    sa.Column('fiscal_number', sa.String(), nullable=True),
    sa.Column('register_address', sa.String(), nullable=True),
    sa.Column('excise_stamp', sa.String(), nullable=True),
    sa.Column('shift_number', sa.Integer(), nullable=True),
    sa.Column('payment_type', sa.String(), nullable=True),
    sa.Column('is_return', sa.Boolean(), nullable=True),
    sa.Column('check_link', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата та час створення запису'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата та час останнього оновлення запису'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Чи є запис активним'),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], name=op.f('fk_product_sales_report_id_reports'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_sales'))
    )
    with op.batch_alter_table('product_sales', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_sales_product_code'), ['product_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_product_sales_receipt_numbers'), ['receipt_numbers'], unique=False)

    op.create_table('users',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('role_id', sa.String(length=36), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False, comment='Унікальний ідентифікатор запису'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата та час створення запису'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата та час останнього оновлення запису'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Чи є запис активним'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_users_role_id_roles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('tokens',
    sa.Column('token', sa.String(length=128), nullable=False, comment='API токен для автентифікації'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Назва токену для ідентифікації користувачем'),
    sa.Column('description', sa.Text(), nullable=True, comment='Опис токену'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='ID користувача, якому належить токен'),
    sa.Column('scopes', sa.String(length=255), nullable=True, comment='Права доступу токену (розділені комами)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Чи активний токен'),
    sa.Column('last_used_at', sa.DateTime(), nullable=True, comment='Дата та час останнього використання токену'),
    sa.Column('expires_at', sa.DateTime(), nullable=True, comment='Дата та час закінчення терміну дії токену'),
    sa.Column('created_from_ip', sa.String(length=45), nullable=True, comment='IP-адреса, з якої був створений токен'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='Унікальний ідентифікатор запису'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата та час створення запису'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата та час останнього оновлення запису'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tokens_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tokens'))
    )
    with op.batch_alter_table('tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tokens_token'), ['token'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tokens_token'))

    op.drop_table('tokens')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('product_sales', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_sales_receipt_numbers'))
        batch_op.drop_index(batch_op.f('ix_product_sales_product_code'))

    op.drop_table('product_sales')
    op.drop_table('application_logs')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_name'))

    op.drop_table('roles')
    op.drop_table('reports')
    with op.batch_alter_table('otps', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_otps_email'))

    op.drop_table('otps')
    op.drop_table('http_logs')
    # ### end Alembic commands ###
