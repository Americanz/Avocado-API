"""create transaction_bonus table properly

Revision ID: 02413db33884
Revises: e88558db76df
Create Date: 2025-09-01 13:00:09.303418

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '02413db33884'
down_revision: Union[str, None] = 'e88558db76df'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transaction_bonus',
    sa.Column('client_id', sa.BigInteger(), nullable=False, comment='Client ID from Poster'),
    sa.Column('transaction_id', sa.BigInteger(), nullable=True, comment='Related Poster transaction ID'),
    sa.Column('operation_type', sa.String(length=20), nullable=False, comment='Operation type: EARN, SPEND, ADJUST, EXPIRE'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Bonus amount (+/- value)'),
    sa.Column('balance_before', sa.Numeric(precision=10, scale=2), nullable=False, comment='Client bonus balance before operation'),
    sa.Column('balance_after', sa.Numeric(precision=10, scale=2), nullable=False, comment='Client bonus balance after operation'),
    sa.Column('description', sa.Text(), nullable=True, comment='Operation description'),
    sa.Column('bonus_percent', sa.Numeric(precision=5, scale=2), nullable=True, comment='Bonus percentage applied'),
    sa.Column('transaction_sum', sa.Numeric(precision=10, scale=2), nullable=True, comment='Transaction sum for bonus calculation'),
    sa.Column('processed_at', sa.DateTime(), nullable=False, comment='When operation was processed'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Унікальний ідентифікатор запису'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата та час створення запису'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата та час останнього оновлення запису'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Чи є запис активним'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name=op.f('fk_transaction_bonus_client_id_clients')),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.transaction_id'], name=op.f('fk_transaction_bonus_transaction_id_transactions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transaction_bonus'))
    )
    with op.batch_alter_table('transaction_bonus', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transaction_bonus_client_id'), ['client_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_transaction_bonus_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_transaction_bonus_transaction_id'), ['transaction_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction_bonus', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transaction_bonus_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_transaction_bonus_operation_type'))
        batch_op.drop_index(batch_op.f('ix_transaction_bonus_client_id'))

    op.drop_table('transaction_bonus')
    # ### end Alembic commands ###
